<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pressing my way to the surface</title>
  
  <subtitle>rearrange</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://Chenaoshuang.github.io/"/>
  <updated>2018-03-28T14:12:57.418Z</updated>
  <id>http://Chenaoshuang.github.io/</id>
  
  <author>
    <name>Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LintCode-最小差</title>
    <link href="http://Chenaoshuang.github.io/2018/04/02/2018-notes/Lintcode-%E6%9C%80%E5%B0%8F%E5%B7%AE/"/>
    <id>http://Chenaoshuang.github.io/2018/04/02/2018-notes/Lintcode-最小差/</id>
    <published>2018-04-02T15:33:05.835Z</published>
    <updated>2018-03-28T14:12:57.418Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>给定两个整数数组（第一个是数组 A，第二个是数组 B），在数组 A 中取 A[i]，数组 B 中取 B[j]，A[i] 和 B[j]两者的差越小越好(|A[i] - B[j]|)，返回最小差。</p><h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><p>给定数组 A = [3,4,6,7]， B = [2,3,8,9]，返回 0。</p><h2 id="挑战"><a href="#挑战" class="headerlink" title="挑战"></a>挑战</h2><p>时间复杂度为O(n log n)</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ul><li>对两个数组进行排序</li><li>采用二分法查找</li></ul><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><h3 id="1-排序"><a href="#1-排序" class="headerlink" title="1. 排序"></a>1. 排序</h3><p>由于在该题中排序并不是解题的重点，所以直接采用java.util.Arrays类中的sort方法对数组进行排序（或者采用java.util.Collections中的sort方法对对象数组进行排序）</p><h3 id="2-二分法查找-重点"><a href="#2-二分法查找-重点" class="headerlink" title="2. 二分法查找(重点)"></a>2. 二分法查找(重点)</h3><ul><li>设置两个指针i和j分别指向两个数组的第一个元素</li><li>由于指向的元素一大一小，保持大的元素不变，小的元素向前增加，直到其中有一个数组遍历完</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public int smallestDifference(int[] A,int[] B)&#123;</span><br><span class="line">        java.util.Arrays.sort(A);</span><br><span class="line">        java.util.Arrays.sort(B);</span><br><span class="line">        int i = 0;</span><br><span class="line">        int j = 0;</span><br><span class="line">        int min_num = Math.abs(A[0]-B[0]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(i!=A.length &amp;&amp; j!=B.length)&#123;</span><br><span class="line">            min_num = min(Math.abs(A[i]-B[j]),min_num);</span><br><span class="line">            <span class="keyword">if</span>(A[i] &gt; B[j]) ++j;</span><br><span class="line">            <span class="keyword">else</span> ++i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> min_num;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="Kotlin"><a href="#Kotlin" class="headerlink" title="Kotlin"></a>Kotlin</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;给定两个整数数组（第一个是数组 A，第二个是数组 B），在数组 A 中取 A[i]，数组 B 中取 B[j]，A[i] 和 B[j]两者的差
      
    
    </summary>
    
    
      <category term="LintCode" scheme="http://Chenaoshuang.github.io/tags/LintCode/"/>
    
      <category term="Exercise" scheme="http://Chenaoshuang.github.io/tags/Exercise/"/>
    
  </entry>
  
  <entry>
    <title>Github and hexo</title>
    <link href="http://Chenaoshuang.github.io/2018/04/02/2018-notes/Github%20and%20Hexo/"/>
    <id>http://Chenaoshuang.github.io/2018/04/02/2018-notes/Github and Hexo/</id>
    <published>2018-04-02T15:33:05.835Z</published>
    <updated>2018-03-25T08:33:04.555Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搭建环境准备"><a href="#搭建环境准备" class="headerlink" title="搭建环境准备"></a>搭建环境准备</h2><h3 id="配置Node-js"><a href="#配置Node-js" class="headerlink" title="配置Node.js"></a><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">配置Node.js</a></h3><p>Win+R打开Windows运行界面输入cmd，在打开的命令行界面中输入以下命令检测安装是否成功（显示版本信息）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure></p><h3 id="配置Git"><a href="#配置Git" class="headerlink" title="配置Git"></a><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">配置Git</a></h3><p>同样在命令行界面中输入以下命令检测安装是否成功（显示版本信息）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure></p><h3 id="github账户的注册和配置"><a href="#github账户的注册和配置" class="headerlink" title="github账户的注册和配置"></a>github账户的注册和配置</h3><p><1><a href="https://github.com/" target="_blank" rel="noopener">Github注册</a></1></p><p><2>创建代码库——点击页面右上角的加号，选择New repository进入代码库创建页面，在Repository name下填写你的用户名</2></p><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在自己认为合适的地方创建一个名为hexo的文件夹，在命令行界面中进入到该目录，并在命令行中输入命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> 目标文件夹地址(例：C:\Users\Administrator\hexo)</span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install hexo --save</span><br><span class="line">hexo -v //检查hexo是否安装成功</span><br><span class="line">npm install hexo-deployer-git --save //提前安装一个扩展</span><br></pre></td></tr></table></figure></p><h3 id="配置hexo"><a href="#配置hexo" class="headerlink" title="配置hexo"></a>配置hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h3 id="体验hexo"><a href="#体验hexo" class="headerlink" title="体验hexo"></a>体验hexo</h3><p>在浏览器中打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>将会看到hexo界面<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s //然后会提示INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure></p><h3 id="添加插件"><a href="#添加插件" class="headerlink" title="添加插件"></a>添加插件</h3><p>添加sitemap和feed插件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed -save</span><br><span class="line">npm install hexo-generator-sitemap -save</span><br></pre></td></tr></table></figure></p><p>在_config.yml末尾增加以下内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line">Plugins:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line">- hexo-generator-sitemap</span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line">feed:</span><br><span class="line">  <span class="built_in">type</span>: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  <span class="built_in">limit</span>: 20</span><br><span class="line"><span class="comment">#sitemap</span></span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br></pre></td></tr></table></figure></p><h3 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d //在部署前先生成</span><br></pre></td></tr></table></figure><h2 id="关联Hexo与github-page"><a href="#关联Hexo与github-page" class="headerlink" title="关联Hexo与github page"></a>关联Hexo与github page</h2><h3 id="配置Git个人信息"><a href="#配置Git个人信息" class="headerlink" title="配置Git个人信息"></a>配置Git个人信息</h3><p>打开Git Bash，在命令行中输入以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"***"</span></span><br><span class="line">git config --global user.email <span class="string">"***@qq.com"</span></span><br></pre></td></tr></table></figure></p><h3 id="配置SSH密钥"><a href="#配置SSH密钥" class="headerlink" title="配置SSH密钥"></a>配置SSH密钥</h3><p>登录GIthub点击头像下的settings，在SSH and GPG keys中添加SSH（密钥默认的存储路径是C:\Users\Administrator.ssh\id_rsa），新建一个new ssh key，将id_ras.pub文件里的内容复制上去<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"***@qq.com"</span> //连续三次回车生成密钥</span><br><span class="line">ssh -T git@github.com //检测添加SSH是否成功</span><br></pre></td></tr></table></figure></p><h3 id="配置Deployment"><a href="#配置Deployment" class="headerlink" title="配置Deployment"></a>配置Deployment</h3><p>在hexo文件中的_config.yml中找到Deployment，然后按照如下修改(填写的时候注意冒号后面的一个空格不能漏)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy：</span><br><span class="line">  <span class="literal">true</span>: git</span><br><span class="line">  repo: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><h2 id="DNS域名绑定"><a href="#DNS域名绑定" class="headerlink" title="DNS域名绑定"></a>DNS域名绑定</h2><p>可以在腾讯云、阿里云等地方购买域名<br>拥有域名以后进入控制台对该域名进行解析,在域名解析页面添加以下解析<br><img src="/2018/04/02/2018-notes/Github and Hexo/DNS.png" alt="域名解析"><br>解析以后就可以到github的settings页面中找到github page中的custom domain，在里面填写你的域名即可<br>保存后回到你的hexo文件夹，在source文件夹中新建一个CNAME文件（无需后缀），该文件的内容即为你的域名</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;搭建环境准备&quot;&gt;&lt;a href=&quot;#搭建环境准备&quot; class=&quot;headerlink&quot; title=&quot;搭建环境准备&quot;&gt;&lt;/a&gt;搭建环境准备&lt;/h2&gt;&lt;h3 id=&quot;配置Node-js&quot;&gt;&lt;a href=&quot;#配置Node-js&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="Hexo" scheme="http://Chenaoshuang.github.io/tags/Hexo/"/>
    
      <category term="github" scheme="http://Chenaoshuang.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Java笔记</title>
    <link href="http://Chenaoshuang.github.io/2018/04/02/2018-notes/Java/"/>
    <id>http://Chenaoshuang.github.io/2018/04/02/2018-notes/Java/</id>
    <published>2018-04-02T15:33:05.835Z</published>
    <updated>2018-03-29T08:22:37.508Z</updated>
    
    <content type="html"><![CDATA[<h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><h2 id="Java-Map"><a href="#Java-Map" class="headerlink" title="Java Map"></a>Java Map</h2><p>Map用于存储元素对（称为“键”和“值”），其中每个键映射到一个值</p><h3 id="构建Map"><a href="#构建Map" class="headerlink" title="构建Map"></a>构建Map</h3><p>Map定义了几个用于插入和删除元素的变换方法</p><table><br>     <tr><br>        <td>clear()</td><br>        <td>从Map中删除所有映射<br>     </td></tr><br>     <tr><br>        <td>remove(Object key)</td><br>        <td>从Map中删除键和关联的值<br>     </td></tr><br>     <tr><br>        <td>put(Object key,Object value)</td><br>        <td>将指定值与指定键相关联<br>     </td></tr><br>     <tr><br>        <td>putAll(Map t)</td><br>        <td>将指定指定Map中的所有映射复制到map<br>     </td></tr><br></table><h3 id="查看Map"><a href="#查看Map" class="headerlink" title="查看Map"></a>查看Map</h3><p>keySet()抽取key序列，将map中的所有keys生成一个Set<em>keySet()中元素是不允许重复的</em><br>values()抽取value序列，将map中的所有values生成一个Collection<em>values()中的元素是允许重复的</em></p><table><br>     <tr><br>        <td>entrySet()</td><br>        <td>返回Map中所包含映射的Set视图。Set中的每个元素都是一个Map.Entry对象，可以使用getKey()和getValue()方法（还有一个setValue()方法）访问后者的键元素和值元素</td><br>     </tr><br>     <tr><br>        <td>keySet()</td><br>        <td>返回Map中所包含键的Set视图。删除Set中的元素还将删除Map中相应的映射（键和值）</td><br>     </tr><br>     <tr><br>        <td>values()</td><br>        <td>返回map中所包含值的Collection视图。删除Collection中的元素还将删除Map中相应的映射（键和值）</td><br>     </tr><br></table><h3 id="访问元素"><a href="#访问元素" class="headerlink" title="访问元素"></a>访问元素</h3><table><br>     <tr><br>        <td>get(Object key)</td><br>        <td>返回与指定键关联的值</td><br>     </tr><br>     <tr><br>        <td>containsKey(Object key)</td><br>        <td>如果Map包含指定键的映射，则返回true</td><br>     </tr><br>     <tr><br>        <td>containsValue(Object value)</td><br>        <td>如果此Map将一个或多个键映射到指定值，则返回true</td><br>     </tr><br>     <tr><br>        <td>isEmpty()</td><br>        <td>如果Map不包含键-值映射，则返回true</td><br>     </tr><br>     <tr><br>        <td>size()</td><br>        <td>返回Map中的键-值映射的数量</td><br>     </tr><br></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;正则表达式&quot;&gt;&lt;a href=&quot;#正则表达式&quot; class=&quot;headerlink&quot; title=&quot;正则表达式&quot;&gt;&lt;/a&gt;正则表达式&lt;/h2&gt;&lt;h3 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语
      
    
    </summary>
    
    
      <category term="Java" scheme="http://Chenaoshuang.github.io/tags/Java/"/>
    
      <category term="Notes" scheme="http://Chenaoshuang.github.io/tags/Notes/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin笔记</title>
    <link href="http://Chenaoshuang.github.io/2018/04/02/2018-notes/KotLin/"/>
    <id>http://Chenaoshuang.github.io/2018/04/02/2018-notes/KotLin/</id>
    <published>2018-04-02T15:33:05.835Z</published>
    <updated>2018-03-29T09:09:03.465Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="数组的声明"><a href="#数组的声明" class="headerlink" title="数组的声明"></a>数组的声明</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var int_array:IntArray = intArrayOf(1, 2, 3)</span><br><span class="line">var long_array:LongArray = longArrayOf(1, 2, 3)</span><br><span class="line">var float_array:FloatArray = floatArrayOf(1.0f, 2.0f, 3.0f)</span><br><span class="line">var double_array:DoubleArray = doubleArrayOf(1.0, 2.0, 3.0)</span><br><span class="line">var boolean_array:BooleanArray = booleanArrayOf(<span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">true</span>)</span><br><span class="line">var char_array:CharArray = charArrayOf(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>)</span><br><span class="line">//字符串数组声明较为特殊</span><br><span class="line">var string_array:Array&lt;String&gt; = arrayOf(<span class="string">"How"</span>, <span class="string">"Are"</span>, <span class="string">"You"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;数组&quot;&gt;&lt;a href=&quot;#数组&quot; class=&quot;headerlink&quot; title=&quot;数组&quot;&gt;&lt;/a&gt;数组&lt;/h2&gt;&lt;h3 id=&quot;数组的声明&quot;&gt;&lt;a href=&quot;#数组的声明&quot; class=&quot;headerlink&quot; title=&quot;数组的声明&quot;&gt;&lt;/a&gt;数组的声
      
    
    </summary>
    
    
      <category term="Notes" scheme="http://Chenaoshuang.github.io/tags/Notes/"/>
    
      <category term="Kotlin" scheme="http://Chenaoshuang.github.io/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>Android Task-1</title>
    <link href="http://Chenaoshuang.github.io/2018/04/02/2018-notes/%E7%BB%9F%E8%AE%A1%E5%8D%95%E8%AF%8D%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0/"/>
    <id>http://Chenaoshuang.github.io/2018/04/02/2018-notes/统计单词出现的次数/</id>
    <published>2018-04-02T15:33:05.835Z</published>
    <updated>2018-03-29T08:27:12.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>从键盘输入的一行文字，统计每个单词出现的次数</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>将单词中的标点符号转化为空格</li><li>使用split分隔符将句子中的单词提取出来</li><li>使用Map中的HashMap构建映射表统计每个单词出现的次数</li></ol><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><p>Kotlin中使用正则表达式与Java的使用方式有所不同<br>Java<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String regex = <span class="string">"[\\W]+"</span>;</span><br><span class="line">sentence = sentence.replaceAll(regex, <span class="string">" "</span>);</span><br></pre></td></tr></table></figure></p><p>Kotlin<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sentence = sentence.replace(Regex(<span class="string">"[\\W]+"</span>),<span class="string">" "</span>)</span><br><span class="line">or</span><br><span class="line">sentence = sentence.replace(<span class="string">"[\\W]+"</span>.toRegex(),<span class="string">" "</span>)</span><br></pre></td></tr></table></figure></p><h3 id="split"><a href="#split" class="headerlink" title="split"></a>split</h3><p>Kotlin中的split返回的是List<string></string></p><h3 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h3><p>这里只列出与Java语言不同的地方</p><h4 id="构建HashMap"><a href="#构建HashMap" class="headerlink" title="构建HashMap"></a>构建HashMap</h4><p>Java<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String, Integer&gt; map = new HashMap&lt;String, Integer&gt;();</span><br></pre></td></tr></table></figure></p><p>Kotlin<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">val map = HashMap&lt;String, Int&gt;()</span><br></pre></td></tr></table></figure></p><h4 id="查看Map"><a href="#查看Map" class="headerlink" title="查看Map"></a>查看Map</h4><p>Java<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set&lt;String&gt;keys = map.keySet();</span><br></pre></td></tr></table></figure></p><p>Kotlin<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">val key = map.keys</span><br></pre></td></tr></table></figure></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">import java.util.HashMap</span><br><span class="line">import java.util.Scanner</span><br><span class="line"></span><br><span class="line">fun main(args:Array&lt;String&gt;)&#123;</span><br><span class="line">    val sc = Scanner(System.`<span class="keyword">in</span>`)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"请输入一行英文句子："</span>)</span><br><span class="line">    var sentence:String = sc.nextLine()</span><br><span class="line">    sentence = sentence.replace(Regex(<span class="string">"[\\W]+"</span>),<span class="string">" "</span>) //将句子中的符号转化为空格</span><br><span class="line">    println(sentence)</span><br><span class="line"></span><br><span class="line">    var words:List&lt;String&gt; = sentence.split(<span class="string">" "</span>)</span><br><span class="line"></span><br><span class="line">    val map = HashMap&lt;String, Int&gt;() //构造哈希表（单词-次数）</span><br><span class="line">    <span class="keyword">for</span> (word <span class="keyword">in</span> words) &#123;</span><br><span class="line">        <span class="keyword">if</span> (map.containsKey(word)) &#123; //查找哈希表中是否包含该单词的映射</span><br><span class="line">            map.put(word,map.getValue(word)+1) //如果存在获取该单词的映射值，并将其加一重新放入哈希表中</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            map.put(word,1)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    val keys = map.keys</span><br><span class="line">    <span class="keyword">for</span> (key <span class="keyword">in</span> keys) &#123; //遍历哈希表</span><br><span class="line">        println(key + <span class="string">"："</span> + map[key] + <span class="string">"个"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;从键盘输入的一行文字，统计每个单词出现的次数&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="Kotlin" scheme="http://Chenaoshuang.github.io/tags/Kotlin/"/>
    
      <category term="Task" scheme="http://Chenaoshuang.github.io/tags/Task/"/>
    
  </entry>
  
</feed>
