<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pressing my way to the surface</title>
  
  <subtitle>rearrange</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://Chenaoshuang.github.io/"/>
  <updated>2018-04-21T05:53:24.072Z</updated>
  <id>http://Chenaoshuang.github.io/</id>
  
  <author>
    <name>Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaWeb编写简易购物车</title>
    <link href="http://Chenaoshuang.github.io/2018/04/20/2018-notes/JavaWeb%E6%9C%9F%E4%B8%AD%E5%AE%9E%E9%AA%8C/"/>
    <id>http://Chenaoshuang.github.io/2018/04/20/2018-notes/JavaWeb期中实验/</id>
    <published>2018-04-20T15:43:37.261Z</published>
    <updated>2018-04-21T05:53:24.072Z</updated>
    
    <content type="html"><![CDATA[<h1 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h1><h2 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h2><p>整个实验的实现过程中利用session存储对象(可以存储多个对象)</p><ol><li><p>向session中放入一个集合对象</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.setAttribute(<span class="string">"..."</span>,...)</span><br></pre></td></tr></table></figure></li><li><p>从session中取出对象</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.getAttribute(<span class="string">"..."</span>)</span><br></pre></td></tr></table></figure></li><li><p>存储以及读取对象数组列表的方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">// 存储</span><br><span class="line">ArrayList&lt;Book&gt; booklist = new ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">    Book book = new Book();</span><br><span class="line">    book.setId(rs.getString(<span class="string">"id"</span>));</span><br><span class="line">    book.setName(rs.getString(<span class="string">"name"</span>));</span><br><span class="line">    book.setPrice(rs.getString(<span class="string">"price"</span>));</span><br><span class="line"></span><br><span class="line">    booklist.add(book);</span><br><span class="line">&#125;</span><br><span class="line">request.getSession().setAttribute(<span class="string">"BookList"</span>,booklist); // 向session中放入一个集合对象</span><br><span class="line">// 读取</span><br><span class="line">ArrayList booklist = (ArrayList)request.getSession().getAttribute(<span class="string">"BookList"</span>);</span><br><span class="line"><span class="keyword">for</span>(int i = 0;i &lt; booklist.size();i++)&#123;</span><br><span class="line">    Book book = (Book)booklist.get(i);</span><br><span class="line">    String bookId = book.getId();</span><br><span class="line">    String bookName = book.getName();</span><br><span class="line">    String bookPrice = book.getPrice();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="登录界面"><a href="#登录界面" class="headerlink" title="登录界面"></a>登录界面</h2><p>登录按钮的类型设置为button来检测是否存在用户名或者密码为空的情况，如果两者情况都不存在再将表单提交到LoginServlet里，对用户名和密码进行校验<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="built_in">type</span> = <span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">validate</span></span>()&#123;</span><br><span class="line">        <span class="keyword">if</span>(loginForm.username.value == <span class="string">""</span>)&#123;</span><br><span class="line">            alert(<span class="string">"账号不能为空！"</span>);</span><br><span class="line">            <span class="built_in">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(loginForm.userpassword.value == <span class="string">""</span>)&#123;</span><br><span class="line">            alert(<span class="string">"密码不能为空！"</span>);</span><br><span class="line">            <span class="built_in">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        loginForm.submit();</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;form name=<span class="string">"loginForm"</span> action=<span class="string">"/servlets/LoginServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    &lt;table align=<span class="string">"center"</span> cellspacing=<span class="string">"10"</span>&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td align=<span class="string">"center"</span> colspan=<span class="string">"2"</span>&gt;欢迎来到登录界面&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td align=<span class="string">"center"</span>&gt;用户名：&lt;/td&gt;</span><br><span class="line">            &lt;td align=<span class="string">"center"</span>&gt;&lt;input name=<span class="string">"username"</span> <span class="built_in">type</span>=<span class="string">"text"</span>&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td align=<span class="string">"center"</span>&gt;密    码：&lt;/td&gt;</span><br><span class="line">            &lt;td align=<span class="string">"center"</span>&gt;&lt;input name=<span class="string">"userpassword"</span> <span class="built_in">type</span>=<span class="string">"password"</span>&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td align=<span class="string">"right"</span> colspan=<span class="string">"2"</span>&gt;&lt;input <span class="built_in">type</span>=<span class="string">"button"</span> value=<span class="string">"登陆"</span> onClick=<span class="string">"validate()"</span>&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p><h2 id="登录Servlet处理"><a href="#登录Servlet处理" class="headerlink" title="登录Servlet处理"></a>登录Servlet处理</h2><ol><li>创建User和DB的Java类</li><li>User类用于Session存储当前用户信息</li><li>DB类用于模仿数据库，使用列表存储网站所有用户信息</li></ol><p>User<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">public class User &#123;</span><br><span class="line">    private String userName;</span><br><span class="line">    private String userPassword;</span><br><span class="line"></span><br><span class="line">    public <span class="function"><span class="title">User</span></span>() &#123;</span><br><span class="line">        super();</span><br><span class="line">    &#125;</span><br><span class="line">    public User(String userName, String userPassword) &#123;</span><br><span class="line">        super();</span><br><span class="line">        this.userName = userName;</span><br><span class="line">        this.userPassword = userPassword;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setUserName(String userName) &#123;</span><br><span class="line">        this.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setUserPassword(String userPassword) &#123;</span><br><span class="line">        this.userPassword = userPassword;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String <span class="function"><span class="title">getUserName</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> this.userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String <span class="function"><span class="title">getUserPassword</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> this.userPassword;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">```  </span><br><span class="line">DB</span><br><span class="line">```bash</span><br><span class="line">public class DB &#123;</span><br><span class="line">    private static List list = new ArrayList();</span><br><span class="line"></span><br><span class="line">    static&#123;</span><br><span class="line">        list.add(new User(<span class="string">"张三"</span>,<span class="string">"123456"</span>));</span><br><span class="line">        list.add(new User(<span class="string">"李四"</span>,<span class="string">"123456"</span>));</span><br><span class="line">        list.add(new User(<span class="string">"王芳"</span>,<span class="string">"123456"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static List <span class="function"><span class="title">getAllUser</span></span>()&#123;</span><br><span class="line">        <span class="built_in">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>SessionFilter<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">protected void doGet(HttpServletRequest request,</span><br><span class="line">                         HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">        //获取用户输入的用户名和密码</span><br><span class="line">        String username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String userpassword = request.getParameter(<span class="string">"userpassword"</span>);</span><br><span class="line">        PrintWriter out = response.getWriter();</span><br><span class="line"></span><br><span class="line">        //创建列表存储该网站的所有用户信息</span><br><span class="line">        List&lt;User&gt; lsit = DB.getAllUser();</span><br><span class="line">        //如果用户名和密码正确跳转至欢迎界面</span><br><span class="line">        <span class="keyword">for</span>(User user : lsit)&#123;</span><br><span class="line">            <span class="keyword">if</span>(user.getUserName().equals(username) &amp;&amp; user.getUserPassword().equals(userpassword))&#123;</span><br><span class="line">                request.getSession().setAttribute(<span class="string">"User"</span>,user);</span><br><span class="line">                request.getRequestDispatcher(<span class="string">"/index.jsp"</span>).forward(request,response);</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        out.print(<span class="string">"登陆失败：用户名或密码错误！"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Session过滤处理"><a href="#Session过滤处理" class="headerlink" title="Session过滤处理"></a>Session过滤处理</h2><p>利用session获取当前用户信息，若为空则转至登录界面，否则继续执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">public void doFilter(ServletRequest request, ServletResponse response,</span><br><span class="line">                         FilterChain chain) throws IOException, ServletException &#123;</span><br><span class="line">        //这里设置如果没有登陆将要转发到的页面</span><br><span class="line">        RequestDispatcher dispatcher = request.getRequestDispatcher(<span class="string">"userLogin.jsp"</span>);</span><br><span class="line">        HttpServletRequest req = (HttpServletRequest) request;</span><br><span class="line">        HttpSession session = req.getSession(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        // 从session里取的用户名信息</span><br><span class="line">        // 这里获取session，为了检查session里有没有保存用户信息，没有的话回转发到登陆页面</span><br><span class="line">        User user = (User) session.getAttribute(<span class="string">"User"</span>);</span><br><span class="line"></span><br><span class="line">        // 判断如果没有取到用户信息,就跳转到登陆页面</span><br><span class="line">      //<span class="keyword">if</span> (user == null || <span class="string">""</span>.equals(user)) //不知道为什么<span class="keyword">if</span>在代码块里会出错,只能将它注释了,实际代码中将注释去掉即可</span><br><span class="line">        &#123;</span><br><span class="line">            // 跳转到登陆页面</span><br><span class="line">            dispatcher.forward(request,response);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            // 已经登陆,继续此次请求</span><br><span class="line">            chain.doFilter(request,response);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="中文乱码过滤处理"><a href="#中文乱码过滤处理" class="headerlink" title="中文乱码过滤处理"></a>中文乱码过滤处理</h2><p>简化操作——不用在每个servlet文件里都进行中文的设置<br>EncodingFilter<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public void doFilter(ServletRequest request, ServletResponse response,</span><br><span class="line">                         FilterChain chain) throws IOException, ServletException &#123;</span><br><span class="line">        request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        response.setContentType(<span class="string">"text/utf-8"</span>);</span><br><span class="line">        chain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h1 id="欢迎界面"><a href="#欢迎界面" class="headerlink" title="欢迎界面"></a>欢迎界面</h1><p>使用meta标签实现页面的延时跳转</p><ol><li>http-equiv=”refresh” //刷新或跳转页面</li><li>content=’3;url=”…”‘ //表示刷新或跳转的开始时间与跳转的网址;如果不加url属性则表示刷新本页</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"refresh"</span> content=<span class="string">'3;url="../searchBook.jsp'</span>&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">     User user = (User)session.getAttribute(<span class="string">"User"</span>);</span><br><span class="line">     String name = user.getUserName();</span><br><span class="line">%&gt;</span><br><span class="line">&lt;h1 align=<span class="string">"center"</span>&gt;欢迎  &lt;b&gt;&lt;%=name %&gt;&lt;/b&gt;  来到图书查询系统！&lt;/h1&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h1 id="图书查询"><a href="#图书查询" class="headerlink" title="图书查询"></a>图书查询</h1><h2 id="查询界面"><a href="#查询界面" class="headerlink" title="查询界面"></a>查询界面</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"servlets/BookOutputServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    &lt;table align=<span class="string">"center"</span> cellspacing=<span class="string">"10"</span>&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td align=<span class="string">"center"</span>&gt;请输入图书名称的模糊资料：&lt;/td&gt;</span><br><span class="line">            &lt;td align=<span class="string">"center"</span>&gt;&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"bookname"</span>&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td align=<span class="string">"right"</span> colspan=<span class="string">"2"</span>&gt;&lt;input <span class="built_in">type</span>=<span class="string">"submit"</span> value=<span class="string">"查询"</span>&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h2 id="查询Servlet处理"><a href="#查询Servlet处理" class="headerlink" title="查询Servlet处理"></a>查询Servlet处理</h2><p>这里进行了数据库的连接以及使用sql语句进行模糊查询：”select * from book where name like binary’%” + bookname + “%’”（%表示不限制个数的任意字符）<br>跳转页面：request.getRequestDispatcher(“/searchOutcome.jsp”).forward(request,response);<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">protected void doGet(HttpServletRequest request,</span><br><span class="line">                         HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">        PrintWriter out = response.getWriter();</span><br><span class="line"></span><br><span class="line">        //获取全局变量</span><br><span class="line">        ServletContext application = this.getServletContext();</span><br><span class="line">        driverClassName = application.getInitParameter(<span class="string">"driverClassName"</span>);</span><br><span class="line">        url = application.getInitParameter(<span class="string">"url"</span>);</span><br><span class="line">        username = application.getInitParameter(<span class="string">"username"</span>);</span><br><span class="line">        password = application.getInitParameter(<span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">        Connection connection = null;</span><br><span class="line">        Statement statement = null;</span><br><span class="line"></span><br><span class="line">        try&#123;</span><br><span class="line">            //连接数据库驱动</span><br><span class="line">            Class.forName(driverClassName);</span><br><span class="line">            connection = DriverManager.getConnection(url,username,password);</span><br><span class="line">            //使用Statement接口运行Sql语句</span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line"></span><br><span class="line">            //模糊查询</span><br><span class="line">            String bookname = request.getParameter(<span class="string">"bookname"</span>);</span><br><span class="line">            String sql = (<span class="string">"select * from book where name like binary'%"</span> + bookname + <span class="string">"%'"</span>);</span><br><span class="line"></span><br><span class="line">            ResultSet rs = statement.executeQuery(sql);</span><br><span class="line">            ArrayList&lt;Book&gt; booklist = new ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">                Book book = new Book();</span><br><span class="line">                book.setId(rs.getString(<span class="string">"id"</span>));</span><br><span class="line">                book.setName(rs.getString(<span class="string">"name"</span>));</span><br><span class="line">                book.setPrice(rs.getString(<span class="string">"price"</span>));</span><br><span class="line"></span><br><span class="line">                booklist.add(book);</span><br><span class="line">            &#125;</span><br><span class="line">            //向session中放入一个集合对象</span><br><span class="line">            request.getSession().setAttribute(<span class="string">"BookList"</span>,booklist);</span><br><span class="line">            //跳转页面</span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/searchOutcome.jsp"</span>).forward(request,response);</span><br><span class="line">        &#125;catch (SQLException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;catch (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;finally &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                //<span class="keyword">if</span> (statement != null) &#123;  //不知道为什么<span class="keyword">if</span>在代码块里会出错,只能将它注释了,实际代码中将注释去掉即可</span><br><span class="line">                    statement.close();</span><br><span class="line">                &#125;</span><br><span class="line">                //<span class="keyword">if</span> (connection != null) &#123;  //不知道为什么<span class="keyword">if</span>在代码块里会出错,只能将它注释了,实际代码中将注释去掉即可</span><br><span class="line">                    connection.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h1 id="图书查询结果"><a href="#图书查询结果" class="headerlink" title="图书查询结果"></a>图书查询结果</h1><p>使用了url传值的方法：href=”/servlets/AddShoppingServlet?id=&lt;%=i %&gt;”<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"../checkShopping.jsp"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    &lt;table align=<span class="string">"center"</span> cellspacing=<span class="string">"10"</span>&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;书号&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;书名&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;价格&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;%</span><br><span class="line">            ArrayList booklist = (ArrayList)request.getSession().getAttribute(<span class="string">"BookList"</span>);</span><br><span class="line">            <span class="keyword">for</span>(int i = 0;i &lt; booklist.size();i++)&#123;</span><br><span class="line">                Book book = (Book)booklist.get(i);</span><br><span class="line">                String bookId = book.getId();</span><br><span class="line">                String bookName = book.getName();</span><br><span class="line">                String bookPrice = book.getPrice();</span><br><span class="line">        %&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td align=<span class="string">"center"</span>&gt;&lt;%=bookId %&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td align=<span class="string">"center"</span>&gt;&lt;%=bookName %&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td align=<span class="string">"center"</span>&gt;&lt;%=bookPrice %&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td align=<span class="string">"center"</span>&gt;&lt;a href=<span class="string">"/servlets/AddShoppingServlet?id=&lt;%=i %&gt;"</span>&gt;添加到购物车&lt;/a&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;%</span><br><span class="line">            &#125;</span><br><span class="line">        %&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td align=<span class="string">"right"</span> colspan=<span class="string">"4"</span>&gt;&lt;input <span class="built_in">type</span>=<span class="string">"submit"</span> value=<span class="string">"查看购物车"</span>&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p><h1 id="购物车"><a href="#购物车" class="headerlink" title="购物车"></a>购物车</h1><h2 id="添加至购物车"><a href="#添加至购物车" class="headerlink" title="添加至购物车"></a>添加至购物车</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">protected void doGet(HttpServletRequest request,</span><br><span class="line">                         HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">        ArrayList booklist = (ArrayList)request.getSession().getAttribute(<span class="string">"BookList"</span>);</span><br><span class="line">        ArrayList shoppinglist = (ArrayList) request.getSession().getAttribute(<span class="string">"ShoppingList"</span>);</span><br><span class="line">        //防止Session被覆盖</span><br><span class="line">        <span class="keyword">if</span>(shoppinglist == null)&#123;</span><br><span class="line">            shoppinglist = new ArrayList();</span><br><span class="line">            request.getSession().setAttribute(<span class="string">"ShoppingList"</span>,shoppinglist);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //获取Url传值</span><br><span class="line">        String id = request.getParameter(<span class="string">"id"</span>);</span><br><span class="line">        int i = Integer.parseInt(id);</span><br><span class="line"></span><br><span class="line">        //将书本添加至购物车列表</span><br><span class="line">        Book book = (Book)booklist.get(i);</span><br><span class="line">        ShoppingList shopping = new ShoppingList();</span><br><span class="line">        shopping.setGoodsName(book.getName());</span><br><span class="line">        shopping.setGoodsPrice(book.getPrice());</span><br><span class="line">        shoppinglist.add(shopping);</span><br><span class="line">        request.getRequestDispatcher(<span class="string">"/searchOutcome.jsp"</span>).forward(request,response);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="查看购物车"><a href="#查看购物车" class="headerlink" title="查看购物车"></a>查看购物车</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;table align=<span class="string">"center"</span> cellspacing=<span class="string">"10"</span>&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td align=<span class="string">"center"</span> colspan=<span class="string">"3"</span>&gt;购物车中的内容是：&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;商品名称&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;商品价格&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        ArrayList shoppinglist = (ArrayList)request.getSession().getAttribute(<span class="string">"ShoppingList"</span>);</span><br><span class="line">        <span class="keyword">for</span>(int i = 0;i &lt; shoppinglist.size();i++)&#123;</span><br><span class="line">            ShoppingList shopping = (ShoppingList)shoppinglist.get(i);</span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td align=<span class="string">"center"</span>&gt;&lt;%=shopping.getGoodsName() %&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td align=<span class="string">"center"</span>&gt;&lt;%=shopping.getGoodsPrice() %&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td align=<span class="string">"center"</span>&gt;&lt;a href=<span class="string">"/servlets/DeleteShoppingServlet?id=&lt;%=i %&gt;"</span>&gt;从购物车中删除&lt;/a&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><h2 id="从购物车中删除"><a href="#从购物车中删除" class="headerlink" title="从购物车中删除"></a>从购物车中删除</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">protected void doGet(HttpServletRequest request,</span><br><span class="line">                         HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">        ArrayList shoppinglist = (ArrayList)request.getSession().getAttribute(<span class="string">"ShoppingList"</span>);</span><br><span class="line"></span><br><span class="line">        String id = request.getParameter(<span class="string">"id"</span>);</span><br><span class="line">        int i = Integer.parseInt(id);</span><br><span class="line">        shoppinglist.remove(i);</span><br><span class="line">        request.getRequestDispatcher(<span class="string">"/checkShopping.jsp"</span>).forward(request,response);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;登录&quot;&gt;&lt;a href=&quot;#登录&quot; class=&quot;headerlink&quot; title=&quot;登录&quot;&gt;&lt;/a&gt;登录&lt;/h1&gt;&lt;h2 id=&quot;Session&quot;&gt;&lt;a href=&quot;#Session&quot; class=&quot;headerlink&quot; title=&quot;Session&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="notes" scheme="http://Chenaoshuang.github.io/tags/notes/"/>
    
      <category term="JavaWeb" scheme="http://Chenaoshuang.github.io/tags/JavaWeb/"/>
    
      <category term="Mysql" scheme="http://Chenaoshuang.github.io/tags/Mysql/"/>
    
      <category term="Tomcat" scheme="http://Chenaoshuang.github.io/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Cocos2d笔记</title>
    <link href="http://Chenaoshuang.github.io/2018/04/16/2018-notes/Cocos2d/"/>
    <id>http://Chenaoshuang.github.io/2018/04/16/2018-notes/Cocos2d/</id>
    <published>2018-04-16T02:40:57.528Z</published>
    <updated>2018-04-16T10:28:50.551Z</updated>
    
    <content type="html"><![CDATA[<h2 id="精灵-sprite"><a href="#精灵-sprite" class="headerlink" title="精灵(sprite)"></a>精灵(sprite)</h2><h3 id="精灵创建"><a href="#精灵创建" class="headerlink" title="精灵创建"></a>精灵创建</h3><h4 id="使用图像创建"><a href="#使用图像创建" class="headerlink" title="使用图像创建"></a>使用图像创建</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto mySprite = Sprite::create(<span class="string">"mysprite.png"</span>);</span><br></pre></td></tr></table></figure><h4 id="使用矩形"><a href="#使用矩形" class="headerlink" title="使用矩形"></a>使用矩形</h4><p>矩形的初始坐标(0,0)在图形的左上角，从左上角开始算起，40 x 40 的大小。</p><p>如果你没指定一个矩形，Cocos2d-x引擎就会自动使用这个图像全部的宽和高<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto mySprite = Sprite::create(<span class="string">"mysprite.png"</span>,Rect(0,0,40,40));</span><br></pre></td></tr></table></figure></p><h4 id="使用图集"><a href="#使用图集" class="headerlink" title="使用图集"></a>使用图集</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auto spritecache = SpriteFrameCache::getInstance();</span><br><span class="line">spriteCache-&gt;addSpriteFrameWithFile(<span class="string">"sprites.plist"</span>);</span><br></pre></td></tr></table></figure><h4 id="使用精灵缓存"><a href="#使用精灵缓存" class="headerlink" title="使用精灵缓存"></a>使用精灵缓存</h4><p>创建一个精灵并把精灵放到精灵的缓存对象SpriteFrameCache中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto mysprite = Sprite::createWithSpriteFrameName(<span class="string">"mysprite.png"</span>);</span><br></pre></td></tr></table></figure></p><p>也可以从精灵的缓存对象SpriteFrameCache访问一个精灵，访问方法是先从缓存对象中获取对应的SpriteFrame，然后从 SpriteFrame创建精灵<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auto newspriteFrame = SpriteFrameCache::getInstance()-&gt;getSpriteFrameByName(<span class="string">"mysprite.png"</span>);</span><br><span class="line">auto newSprite = Sprite::createWithSpriteFrame(newspriteFrame);</span><br></pre></td></tr></table></figure></p><h3 id="精灵控制"><a href="#精灵控制" class="headerlink" title="精灵控制"></a>精灵控制</h3><h4 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h4><p>锚点确定了精灵对象在计算坐标位置的一个基准点，这个点是精灵内部的点，锚点影响精灵的缩放，旋转，倾斜这种转换，不影响颜色，透明度这种属性。锚点使用的坐标系以左下角为原点(0,0)。默认情况下，所有的节点对象锚点是(0.5,0.5)。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mySprite-&gt;setAnchorPoint(0,0);</span><br></pre></td></tr></table></figure></p><h4 id="位置"><a href="#位置" class="headerlink" title="位置"></a>位置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mySprite-&gt;setPosition(Vec2(100,200));</span><br></pre></td></tr></table></figure><h4 id="旋转"><a href="#旋转" class="headerlink" title="旋转"></a>旋转</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mySprite-&gt;setRotation(20.0f);</span><br></pre></td></tr></table></figure><h4 id="缩放"><a href="#缩放" class="headerlink" title="缩放"></a>缩放</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mySprite-&gt;setScale(2.0);  // 整体缩放</span><br><span class="line">mySprite-&gt;setScaleX(2.0); // 水平缩放</span><br><span class="line">mySprite-&gt;setScaleY(2.0); // 垂直缩放</span><br></pre></td></tr></table></figure><h4 id="倾斜"><a href="#倾斜" class="headerlink" title="倾斜"></a>倾斜</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mySprite-&gt;setSkewX(20.f); // 水平倾斜</span><br><span class="line">mySprite-&gt;setSkewY(20.f); // 垂直倾斜</span><br></pre></td></tr></table></figure><h4 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h4><p>将一个RGB值设置到Color3B对象，调用精灵的setColor(),就能完成精灵颜色的设置。RGB是三个从0-255的值，三个值分别代表红绿蓝的颜色深度，数值越大，颜色越深。特别的RGB(255,255,255)是白色。如果你不想自己指定RGB的三个值，也可以使用Cocos2d-x提供的预定义颜色，比如:Color3B::White，Color3B::Red。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mySprite-&gt;setColor(Color3B::WHITE);</span><br><span class="line">mysprite-&gt;setColor(Color3B(255,255,255));</span><br></pre></td></tr></table></figure></p><h4 id="透明度"><a href="#透明度" class="headerlink" title="透明度"></a>透明度</h4><p>数值越大透明度越低，255代表完全不透明，0代表完全透明。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mySprite-&gt;setOpacity(Color3B::WHITE);</span><br></pre></td></tr></table></figure></p><h3 id="多边形精灵"><a href="#多边形精灵" class="headerlink" title="多边形精灵"></a>多边形精灵</h3><p>普通精灵在绘图处理中被分为了两个三角形，多边形精灵则是被分为了一系列三角形。</p><h4 id="AutoPolygon"><a href="#AutoPolygon" class="headerlink" title="AutoPolygon"></a>AutoPolygon</h4><p>AutoPolygon是一个工具类，它可以在程序运行时，通过跟踪关键点和三角测量，将一个矩形图像划分成一系列小三角形块。</p><p>首先将图像资源传入AutoPolygon进行处理，然后我们使用它生成的对象进行精灵的创建就能得到多边形精灵。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auto pinfo = AutoPolygon::generatePolygon(<span class="string">"filename.png"</span>);</span><br><span class="line">auto sprite = Sprite::create(pinfo);</span><br></pre></td></tr></table></figure></p><h2 id="动作"><a href="#动作" class="headerlink" title="动作"></a>动作</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;精灵-sprite&quot;&gt;&lt;a href=&quot;#精灵-sprite&quot; class=&quot;headerlink&quot; title=&quot;精灵(sprite)&quot;&gt;&lt;/a&gt;精灵(sprite)&lt;/h2&gt;&lt;h3 id=&quot;精灵创建&quot;&gt;&lt;a href=&quot;#精灵创建&quot; class=&quot;header
      
    
    </summary>
    
    
      <category term="C++" scheme="http://Chenaoshuang.github.io/tags/C/"/>
    
      <category term="Cocos2d" scheme="http://Chenaoshuang.github.io/tags/Cocos2d/"/>
    
      <category term="notes" scheme="http://Chenaoshuang.github.io/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>Java Web笔记</title>
    <link href="http://Chenaoshuang.github.io/2018/04/06/2018-notes/Java%20Web/"/>
    <id>http://Chenaoshuang.github.io/2018/04/06/2018-notes/Java Web/</id>
    <published>2018-04-06T03:36:45.447Z</published>
    <updated>2018-04-16T10:29:18.062Z</updated>
    
    <content type="html"><![CDATA[<h2 id="IntelliJ-Idea使用JDBC连接MySql"><a href="#IntelliJ-Idea使用JDBC连接MySql" class="headerlink" title="IntelliJ Idea使用JDBC连接MySql"></a>IntelliJ Idea使用JDBC连接MySql</h2><ol><li><a href="https://dev.mysql.com/downloads/connector/j/" target="_blank" rel="noopener">下载MySql JDBC驱动压缩包</a></li><li>将压缩文件中的mysql-connector-java-5.1.46-bin.jar提取出来，放入创建的JavaWeb项目中Web-&gt;WEB-INF-&gt;lib文件夹内！！！（重要的事情说三遍！！！lib文件夹内！！！如果没有lib文件夹就自己创建一个）</li><li><a href="https://www.imooc.com/article/18385?block_id=tuijian_wz" target="_blank" rel="noopener">点击此处查看详细教程</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> pageEncoding=<span class="string">"UTF-8"</span> %&gt;</span><br><span class="line">&lt;%@ page import=<span class="string">"java.sql.*"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    String driver = <span class="string">"com.mysql.jdbc.Driver"</span>;</span><br><span class="line">    String url = <span class="string">"jdbc:mysql://localhost:3306/chen"</span>;</span><br><span class="line">    String user = <span class="string">"root"</span>;</span><br><span class="line">    String password = <span class="string">"Sufang090703"</span>;</span><br><span class="line">    try&#123;</span><br><span class="line">        Class.forName(driver); //加载数据库的驱动类</span><br><span class="line">        Connection conn = DriverManager.getConnection(url,user,password); //获取连接（地址，用户名，密码）</span><br><span class="line">        Statement statment = conn.createStatement(); //使用Statment接口运行SQL语句</span><br><span class="line">        String sql = <span class="string">"select * from book"</span>; //选取数据库中的需要使用的表</span><br><span class="line">        ResultSet rs = statment.executeQuery(sql);</span><br><span class="line">        //查询语句：statment.executeQuery(sql);</span><br><span class="line">        //添加、删除或修改语句：statment.executeUpdate(sql);</span><br><span class="line">        String id;</span><br><span class="line">        String name;</span><br><span class="line">        String price;</span><br><span class="line">        <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">            id = rs.getString(<span class="string">"id"</span>);</span><br><span class="line">            name = rs.getString(<span class="string">"name"</span>);</span><br><span class="line">            price = rs.getString(<span class="string">"price"</span>);</span><br><span class="line">            out.println(id+<span class="string">"  "</span>+name+<span class="string">"  "</span>+price+<span class="string">"&lt;BR&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        //关闭数据库连接</span><br><span class="line">        rs.close();</span><br><span class="line">        statment.close();</span><br><span class="line">        conn.close();</span><br><span class="line">    &#125;catch(ClassNotFoundException e)&#123;</span><br><span class="line">        System.out.println(<span class="string">"No Driver!"</span>);</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;catch(SQLException e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;catch(Exception e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;IntelliJ-Idea使用JDBC连接MySql&quot;&gt;&lt;a href=&quot;#IntelliJ-Idea使用JDBC连接MySql&quot; class=&quot;headerlink&quot; title=&quot;IntelliJ Idea使用JDBC连接MySql&quot;&gt;&lt;/a&gt;IntelliJ
      
    
    </summary>
    
    
      <category term="notes" scheme="http://Chenaoshuang.github.io/tags/notes/"/>
    
      <category term="JavaWeb" scheme="http://Chenaoshuang.github.io/tags/JavaWeb/"/>
    
      <category term="Mysql" scheme="http://Chenaoshuang.github.io/tags/Mysql/"/>
    
      <category term="Tomcat" scheme="http://Chenaoshuang.github.io/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>LintCode-最小差</title>
    <link href="http://Chenaoshuang.github.io/2018/04/02/2018-notes/Lintcode-%E6%9C%80%E5%B0%8F%E5%B7%AE/"/>
    <id>http://Chenaoshuang.github.io/2018/04/02/2018-notes/Lintcode-最小差/</id>
    <published>2018-04-02T15:33:05.835Z</published>
    <updated>2018-03-28T14:12:57.418Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>给定两个整数数组（第一个是数组 A，第二个是数组 B），在数组 A 中取 A[i]，数组 B 中取 B[j]，A[i] 和 B[j]两者的差越小越好(|A[i] - B[j]|)，返回最小差。</p><h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><p>给定数组 A = [3,4,6,7]， B = [2,3,8,9]，返回 0。</p><h2 id="挑战"><a href="#挑战" class="headerlink" title="挑战"></a>挑战</h2><p>时间复杂度为O(n log n)</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ul><li>对两个数组进行排序</li><li>采用二分法查找</li></ul><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><h3 id="1-排序"><a href="#1-排序" class="headerlink" title="1. 排序"></a>1. 排序</h3><p>由于在该题中排序并不是解题的重点，所以直接采用java.util.Arrays类中的sort方法对数组进行排序（或者采用java.util.Collections中的sort方法对对象数组进行排序）</p><h3 id="2-二分法查找-重点"><a href="#2-二分法查找-重点" class="headerlink" title="2. 二分法查找(重点)"></a>2. 二分法查找(重点)</h3><ul><li>设置两个指针i和j分别指向两个数组的第一个元素</li><li>由于指向的元素一大一小，保持大的元素不变，小的元素向前增加，直到其中有一个数组遍历完</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public int smallestDifference(int[] A,int[] B)&#123;</span><br><span class="line">        java.util.Arrays.sort(A);</span><br><span class="line">        java.util.Arrays.sort(B);</span><br><span class="line">        int i = 0;</span><br><span class="line">        int j = 0;</span><br><span class="line">        int min_num = Math.abs(A[0]-B[0]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(i!=A.length &amp;&amp; j!=B.length)&#123;</span><br><span class="line">            min_num = min(Math.abs(A[i]-B[j]),min_num);</span><br><span class="line">            <span class="keyword">if</span>(A[i] &gt; B[j]) ++j;</span><br><span class="line">            <span class="keyword">else</span> ++i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> min_num;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="Kotlin"><a href="#Kotlin" class="headerlink" title="Kotlin"></a>Kotlin</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;给定两个整数数组（第一个是数组 A，第二个是数组 B），在数组 A 中取 A[i]，数组 B 中取 B[j]，A[i] 和 B[j]两者的差
      
    
    </summary>
    
    
      <category term="LintCode" scheme="http://Chenaoshuang.github.io/tags/LintCode/"/>
    
      <category term="Exercise" scheme="http://Chenaoshuang.github.io/tags/Exercise/"/>
    
  </entry>
  
  <entry>
    <title>Github and hexo</title>
    <link href="http://Chenaoshuang.github.io/2018/04/02/2018-notes/Github%20and%20Hexo/"/>
    <id>http://Chenaoshuang.github.io/2018/04/02/2018-notes/Github and Hexo/</id>
    <published>2018-04-02T15:33:05.835Z</published>
    <updated>2018-03-25T08:33:04.555Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搭建环境准备"><a href="#搭建环境准备" class="headerlink" title="搭建环境准备"></a>搭建环境准备</h2><h3 id="配置Node-js"><a href="#配置Node-js" class="headerlink" title="配置Node.js"></a><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">配置Node.js</a></h3><p>Win+R打开Windows运行界面输入cmd，在打开的命令行界面中输入以下命令检测安装是否成功（显示版本信息）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure></p><h3 id="配置Git"><a href="#配置Git" class="headerlink" title="配置Git"></a><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">配置Git</a></h3><p>同样在命令行界面中输入以下命令检测安装是否成功（显示版本信息）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure></p><h3 id="github账户的注册和配置"><a href="#github账户的注册和配置" class="headerlink" title="github账户的注册和配置"></a>github账户的注册和配置</h3><p><1><a href="https://github.com/" target="_blank" rel="noopener">Github注册</a></1></p><p><2>创建代码库——点击页面右上角的加号，选择New repository进入代码库创建页面，在Repository name下填写你的用户名</2></p><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在自己认为合适的地方创建一个名为hexo的文件夹，在命令行界面中进入到该目录，并在命令行中输入命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> 目标文件夹地址(例：C:\Users\Administrator\hexo)</span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install hexo --save</span><br><span class="line">hexo -v //检查hexo是否安装成功</span><br><span class="line">npm install hexo-deployer-git --save //提前安装一个扩展</span><br></pre></td></tr></table></figure></p><h3 id="配置hexo"><a href="#配置hexo" class="headerlink" title="配置hexo"></a>配置hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h3 id="体验hexo"><a href="#体验hexo" class="headerlink" title="体验hexo"></a>体验hexo</h3><p>在浏览器中打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>将会看到hexo界面<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s //然后会提示INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure></p><h3 id="添加插件"><a href="#添加插件" class="headerlink" title="添加插件"></a>添加插件</h3><p>添加sitemap和feed插件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed -save</span><br><span class="line">npm install hexo-generator-sitemap -save</span><br></pre></td></tr></table></figure></p><p>在_config.yml末尾增加以下内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line">Plugins:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line">- hexo-generator-sitemap</span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line">feed:</span><br><span class="line">  <span class="built_in">type</span>: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  <span class="built_in">limit</span>: 20</span><br><span class="line"><span class="comment">#sitemap</span></span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br></pre></td></tr></table></figure></p><h3 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d //在部署前先生成</span><br></pre></td></tr></table></figure><h2 id="关联Hexo与github-page"><a href="#关联Hexo与github-page" class="headerlink" title="关联Hexo与github page"></a>关联Hexo与github page</h2><h3 id="配置Git个人信息"><a href="#配置Git个人信息" class="headerlink" title="配置Git个人信息"></a>配置Git个人信息</h3><p>打开Git Bash，在命令行中输入以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"***"</span></span><br><span class="line">git config --global user.email <span class="string">"***@qq.com"</span></span><br></pre></td></tr></table></figure></p><h3 id="配置SSH密钥"><a href="#配置SSH密钥" class="headerlink" title="配置SSH密钥"></a>配置SSH密钥</h3><p>登录GIthub点击头像下的settings，在SSH and GPG keys中添加SSH（密钥默认的存储路径是C:\Users\Administrator.ssh\id_rsa），新建一个new ssh key，将id_ras.pub文件里的内容复制上去<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"***@qq.com"</span> //连续三次回车生成密钥</span><br><span class="line">ssh -T git@github.com //检测添加SSH是否成功</span><br></pre></td></tr></table></figure></p><h3 id="配置Deployment"><a href="#配置Deployment" class="headerlink" title="配置Deployment"></a>配置Deployment</h3><p>在hexo文件中的_config.yml中找到Deployment，然后按照如下修改(填写的时候注意冒号后面的一个空格不能漏)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy：</span><br><span class="line">  <span class="literal">true</span>: git</span><br><span class="line">  repo: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><h2 id="DNS域名绑定"><a href="#DNS域名绑定" class="headerlink" title="DNS域名绑定"></a>DNS域名绑定</h2><p>可以在腾讯云、阿里云等地方购买域名<br>拥有域名以后进入控制台对该域名进行解析,在域名解析页面添加以下解析<br><img src="/2018/04/02/2018-notes/Github and Hexo/DNS.png" alt="域名解析"><br>解析以后就可以到github的settings页面中找到github page中的custom domain，在里面填写你的域名即可<br>保存后回到你的hexo文件夹，在source文件夹中新建一个CNAME文件（无需后缀），该文件的内容即为你的域名</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;搭建环境准备&quot;&gt;&lt;a href=&quot;#搭建环境准备&quot; class=&quot;headerlink&quot; title=&quot;搭建环境准备&quot;&gt;&lt;/a&gt;搭建环境准备&lt;/h2&gt;&lt;h3 id=&quot;配置Node-js&quot;&gt;&lt;a href=&quot;#配置Node-js&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="Hexo" scheme="http://Chenaoshuang.github.io/tags/Hexo/"/>
    
      <category term="github" scheme="http://Chenaoshuang.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Java笔记</title>
    <link href="http://Chenaoshuang.github.io/2018/04/02/2018-notes/Java/"/>
    <id>http://Chenaoshuang.github.io/2018/04/02/2018-notes/Java/</id>
    <published>2018-04-02T15:33:05.835Z</published>
    <updated>2018-03-29T08:22:37.508Z</updated>
    
    <content type="html"><![CDATA[<h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><h2 id="Java-Map"><a href="#Java-Map" class="headerlink" title="Java Map"></a>Java Map</h2><p>Map用于存储元素对（称为“键”和“值”），其中每个键映射到一个值</p><h3 id="构建Map"><a href="#构建Map" class="headerlink" title="构建Map"></a>构建Map</h3><p>Map定义了几个用于插入和删除元素的变换方法</p><table><br>     <tr><br>        <td>clear()</td><br>        <td>从Map中删除所有映射<br>     </td></tr><br>     <tr><br>        <td>remove(Object key)</td><br>        <td>从Map中删除键和关联的值<br>     </td></tr><br>     <tr><br>        <td>put(Object key,Object value)</td><br>        <td>将指定值与指定键相关联<br>     </td></tr><br>     <tr><br>        <td>putAll(Map t)</td><br>        <td>将指定指定Map中的所有映射复制到map<br>     </td></tr><br></table><h3 id="查看Map"><a href="#查看Map" class="headerlink" title="查看Map"></a>查看Map</h3><p>keySet()抽取key序列，将map中的所有keys生成一个Set<em>keySet()中元素是不允许重复的</em><br>values()抽取value序列，将map中的所有values生成一个Collection<em>values()中的元素是允许重复的</em></p><table><br>     <tr><br>        <td>entrySet()</td><br>        <td>返回Map中所包含映射的Set视图。Set中的每个元素都是一个Map.Entry对象，可以使用getKey()和getValue()方法（还有一个setValue()方法）访问后者的键元素和值元素</td><br>     </tr><br>     <tr><br>        <td>keySet()</td><br>        <td>返回Map中所包含键的Set视图。删除Set中的元素还将删除Map中相应的映射（键和值）</td><br>     </tr><br>     <tr><br>        <td>values()</td><br>        <td>返回map中所包含值的Collection视图。删除Collection中的元素还将删除Map中相应的映射（键和值）</td><br>     </tr><br></table><h3 id="访问元素"><a href="#访问元素" class="headerlink" title="访问元素"></a>访问元素</h3><table><br>     <tr><br>        <td>get(Object key)</td><br>        <td>返回与指定键关联的值</td><br>     </tr><br>     <tr><br>        <td>containsKey(Object key)</td><br>        <td>如果Map包含指定键的映射，则返回true</td><br>     </tr><br>     <tr><br>        <td>containsValue(Object value)</td><br>        <td>如果此Map将一个或多个键映射到指定值，则返回true</td><br>     </tr><br>     <tr><br>        <td>isEmpty()</td><br>        <td>如果Map不包含键-值映射，则返回true</td><br>     </tr><br>     <tr><br>        <td>size()</td><br>        <td>返回Map中的键-值映射的数量</td><br>     </tr><br></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;正则表达式&quot;&gt;&lt;a href=&quot;#正则表达式&quot; class=&quot;headerlink&quot; title=&quot;正则表达式&quot;&gt;&lt;/a&gt;正则表达式&lt;/h2&gt;&lt;h3 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语
      
    
    </summary>
    
    
      <category term="Java" scheme="http://Chenaoshuang.github.io/tags/Java/"/>
    
      <category term="Notes" scheme="http://Chenaoshuang.github.io/tags/Notes/"/>
    
  </entry>
  
  <entry>
    <title>Android Task-1</title>
    <link href="http://Chenaoshuang.github.io/2018/04/02/2018-notes/%E7%BB%9F%E8%AE%A1%E5%8D%95%E8%AF%8D%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0/"/>
    <id>http://Chenaoshuang.github.io/2018/04/02/2018-notes/统计单词出现的次数/</id>
    <published>2018-04-02T15:33:05.835Z</published>
    <updated>2018-03-29T08:27:12.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>从键盘输入的一行文字，统计每个单词出现的次数</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>将单词中的标点符号转化为空格</li><li>使用split分隔符将句子中的单词提取出来</li><li>使用Map中的HashMap构建映射表统计每个单词出现的次数</li></ol><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><p>Kotlin中使用正则表达式与Java的使用方式有所不同<br>Java<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String regex = <span class="string">"[\\W]+"</span>;</span><br><span class="line">sentence = sentence.replaceAll(regex, <span class="string">" "</span>);</span><br></pre></td></tr></table></figure></p><p>Kotlin<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sentence = sentence.replace(Regex(<span class="string">"[\\W]+"</span>),<span class="string">" "</span>)</span><br><span class="line">or</span><br><span class="line">sentence = sentence.replace(<span class="string">"[\\W]+"</span>.toRegex(),<span class="string">" "</span>)</span><br></pre></td></tr></table></figure></p><h3 id="split"><a href="#split" class="headerlink" title="split"></a>split</h3><p>Kotlin中的split返回的是List<string></string></p><h3 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h3><p>这里只列出与Java语言不同的地方</p><h4 id="构建HashMap"><a href="#构建HashMap" class="headerlink" title="构建HashMap"></a>构建HashMap</h4><p>Java<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String, Integer&gt; map = new HashMap&lt;String, Integer&gt;();</span><br></pre></td></tr></table></figure></p><p>Kotlin<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">val map = HashMap&lt;String, Int&gt;()</span><br></pre></td></tr></table></figure></p><h4 id="查看Map"><a href="#查看Map" class="headerlink" title="查看Map"></a>查看Map</h4><p>Java<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set&lt;String&gt;keys = map.keySet();</span><br></pre></td></tr></table></figure></p><p>Kotlin<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">val key = map.keys</span><br></pre></td></tr></table></figure></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">import java.util.HashMap</span><br><span class="line">import java.util.Scanner</span><br><span class="line"></span><br><span class="line">fun main(args:Array&lt;String&gt;)&#123;</span><br><span class="line">    val sc = Scanner(System.`<span class="keyword">in</span>`)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"请输入一行英文句子："</span>)</span><br><span class="line">    var sentence:String = sc.nextLine()</span><br><span class="line">    sentence = sentence.replace(Regex(<span class="string">"[\\W]+"</span>),<span class="string">" "</span>) //将句子中的符号转化为空格</span><br><span class="line">    println(sentence)</span><br><span class="line"></span><br><span class="line">    var words:List&lt;String&gt; = sentence.split(<span class="string">" "</span>)</span><br><span class="line"></span><br><span class="line">    val map = HashMap&lt;String, Int&gt;() //构造哈希表（单词-次数）</span><br><span class="line">    <span class="keyword">for</span> (word <span class="keyword">in</span> words) &#123;</span><br><span class="line">        <span class="keyword">if</span> (map.containsKey(word)) &#123; //查找哈希表中是否包含该单词的映射</span><br><span class="line">            map.put(word,map.getValue(word)+1) //如果存在获取该单词的映射值，并将其加一重新放入哈希表中</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            map.put(word,1)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    val keys = map.keys</span><br><span class="line">    <span class="keyword">for</span> (key <span class="keyword">in</span> keys) &#123; //遍历哈希表</span><br><span class="line">        println(key + <span class="string">"："</span> + map[key] + <span class="string">"个"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;从键盘输入的一行文字，统计每个单词出现的次数&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="Kotlin" scheme="http://Chenaoshuang.github.io/tags/Kotlin/"/>
    
      <category term="Task" scheme="http://Chenaoshuang.github.io/tags/Task/"/>
    
  </entry>
  
</feed>
